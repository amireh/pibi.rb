$LOAD_PATH << File.join(File.dirname(__FILE__), '..')

ENV['RACK_ENV'] = 'test'

require 'rspec'
require 'lib/pibi'

# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus => true

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
  config.before(:each) do
    AMQP::Channel.queue('specs', { passive: true }).purge
  end

  config.after(:each) do
    if @consumer
      if q = @consumer.instance_variable_get('@queue')[:object]
        q.purge
      end
    end
  end

  Thread.abort_on_exception = true

  unless EventMachine.reactor_running?
    puts '>> Launching the EM reactor'

    reactor_thread = Thread.new {
      EventMachine.run do
      # Pibi.start do
        puts ">>\tEM reactor up: #{EM.reactor_running?}"
      end
    }

    reactor_thread.abort_on_exception = true

    at_exit do
      puts '>> Shutting down the EM reactor in 5 more seconds'

      EventMachine.defer do
        puts ">>\tShutting down."
        EventMachine.stop
        sleep(0.5)
        reactor_thread.exit
      end

      reactor_thread.join(2)
    end

    sleep(1)
  end

end

Dir["./spec/helpers/**/*.rb"].sort.each { |f| require f }